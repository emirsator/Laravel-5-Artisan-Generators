<?php

namespace App\Services;

use App\Services\Interfaces\{{entity}}ServiceInterface;

use App\Repositories\Interfaces\{{entity}}RepositoryInterface;

class {{entity}}Service implements {{entity}}ServiceInterface 
{
  protected ${{entity-small}}Repository;

  public function __construct({{entity}}RepositoryInterface ${{entity-small}}Repository)
  {
    $this->{{entity-small}}Repository = ${{entity-small}}Repository;
  }

  public function get{{entity}}s()
  {
    $this->{{entity-small}}Repository->get{{entity}}s();
  }

  public function store{{entity}}(${{entity-small}})
  {
    $this->{{entity-small}}Repository->store{{entity}}(${{entity-small}});
  }

	public function delete{{entity}}(${{entity-small}}Id)
  {
		$this->{{entity-small}}Repository->delete{{entity}}(${{entity-small}}Id);
  }

	public function get{{entity}}ById(${{entity-small}}Id)
  {
		$this->{{entity-small}}Repository->get{{entity}}ById(${{entity-small}}Id);
  }

  public function get{{entity}}SelectQuery()
  {
    $this->{{entity-small}}Repository->get{{entity}}SelectQuery();
  }
}